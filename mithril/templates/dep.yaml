apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: mithril
  name: api
  labels:
    app: api
    version: {{ .Values.image_api.tag }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: api
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api
        version: {{ .Values.image_api.tag }}
    spec:
      containers:
      - name: mithril-api
        image: {{ .Values.image_api.repository }}:{{ .Values.image_api.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 4000
          protocol: TCP
        env:
        # Phoenix
        - name: LOG_LEVEL
          value:  "{{ .Values.env_api.LOG_LEVEL }}"
        - name: PORT
          value: "{{ .Values.env_api.port }}"
        - name: HOST
          value: "{{ .Values.env_api.host }}"
        - name: SECRET_KEY
          value: "{{ .Values.env_api.secret }}"
        - name: ERLANG_COOKIE
          value: "{{ .Values.env_api.ERLANG_COOKIE }}"
        # Database
        - name: DB_NAME
          value: "{{ .Values.env_db.POSTGRES_DB }}"
        - name: DB_USER
          value: "{{ .Values.env_db.POSTGRES_USER }}"
        - name: DB_PASSWORD
  {{- if .Values.env_db.POSTGRES_PASSWORD }}
          value: "{{ .Values.env_db.POSTGRES_PASSWORD }}"
  {{ else }}
          valueFrom:
             secretKeyRef:
               name: db
               key: DB_PASSWORD
  {{ end }}
        - name: DB_HOST
          value: "{{ .Values.env_api.DB_HOST }}"
        - name: DB_PORT
          value: "{{ .Values.env_api.DB_PORT }}"
        - name: DB_POOL_SIZE
          value: "{{ .Values.env_api.DB_POOL_SIZE }}"
        # App migrations
        - name: DB_MIGRATE
          value: "{{ .Values.env_api.DB_MIGRATE }}"
        # Seeder
        - name: LOAD_FIXTURES
          value: "{{ .Values.env_api.LOAD_FIXTURES }}"
        - name: OTP_ENDPOINT
          value: "{{ .Values.env_api.OTP_ENDPOINT }}"
        - name: OTP_REQUEST_TIMEOUT
          value: "{{ .Values.env_api.OTP_REQUEST_TIMEOUT }}"
        - name: MPI_ENDPOINT
          value: "{{ .Values.env_api.MPI_ENDPOINT }}"
        - name: MPI_REQUEST_TIMEOUT
          value: "{{ .Values.env_api.MPI_REQUEST_TIMEOUT }}"
        - name: DIGITAL_SIGNATURE_ENABLED
          value: "{{ .Values.env_api.DIGITAL_SIGNATURE_ENABLED }}"
        - name: DIGITAL_SIGNATURE_ENDPOINT
          value: "{{ .Values.env_api.DIGITAL_SIGNATURE_ENDPOINT }}"
        - name: DIGITAL_SIGNATURE_REQUEST_TIMEOUT
          value: "{{ .Values.env_api.DIGITAL_SIGNATURE_REQUEST_TIMEOUT }}"
        # Two-factor authentication
        - name: USER_2FA_ENABLED
          value: "{{ .Values.env_api.USER_2FA_ENABLED }}"
        - name: SMS_ENABLED
          value: "{{ .Values.env_api.SMS_ENABLED }}"
        - name: USER_LOGIN_ERROR_MAX
          value: "{{ .Values.env_api.USER_LOGIN_ERROR_MAX }}"
        - name: USER_OTP_ERROR_MAX
          value: "{{ .Values.env_api.USER_OTP_ERROR_MAX }}"
        - name: OTP_LIFETIME
          value: "{{ .Values.env_api.OTP_LIFETIME }}"
        - name: OTP_LENGTH
          value: "{{ .Values.env_api.OTP_LENGTH }}"
        - name: OTP_MAX_ATTEMPTS
          value: "{{ .Values.env_api.OTP_MAX_ATTEMPTS }}"
        - name: OTP_SEND_TIMEOUT
          value: "{{ .Values.env_api.OTP_SEND_TIMEOUT }}"
        - name: TOKEN_EXPIRATION_SCHEDULE
          value: "{{ .Values.env_api.TOKEN_EXPIRATION_SCHEDULE }}"
        - name: TOKEN_DELETING_SCHEDULE
          value: "{{ .Values.env_api.TOKEN_DELETING_SCHEDULE }}"
        - name: OTP_EXPIRATION_SCHEDULE
          value: "{{ .Values.env_api.OTP_EXPIRATION_SCHEDULE }}"
        - name: PASSWORD_EXPIRATION_DAYS
          value: "{{ .Values.env_api.PASSWORD_EXPIRATION_DAYS }}"
        - name: TOKEN_TTL_AFTER_EXPIRATION_DAYS
          value: "{{ .Values.env_api.TOKEN_TTL_AFTER_EXPIRATION_DAYS }}"
        - name: JWT_SECRET
          value: "{{ .Values.env_api.JWT_SECRET }}"
        - name: JWT_LOGIN_TTL
          value: "{{ .Values.env_api.JWT_LOGIN_TTL }}"
        - name: SENSITIVE_DATA_IN_RESPONSE_ENABLED
          value: "{{ .Values.env_api.SENSITIVE_DATA_IN_RESPONSE_ENABLED }}"
        - name: TRUSTED_CLIENT_IDS
          value: "{{ .Values.env_api.TRUSTED_CLIENT_IDS }}"
        - name: AUTH_ACCESS_TOKEN_LIFETIME
          value: "{{ .Values.env_api.AUTH_ACCESS_TOKEN_LIFETIME }}"
        - name: AUTH_REFRESH_TOKEN_LIFETIME
          value: "{{ .Values.env_api.AUTH_REFRESH_TOKEN_LIFETIME }}"
        resources:
          requests:
            cpu: {{ .Values.resources_api.cpu }}
            memory: {{ .Values.resources_api.memory }}
          limits:
            cpu: {{ .Values.resources_api.cpu_limit }}
            memory: {{ .Values.resources_api.memory_limit }}
        readinessProbe:
          timeoutSeconds: 2
          initialDelaySeconds: 5
          failureThreshold: 3
          tcpSocket:
            port: 4000
        livenessProbe:
          timeoutSeconds: 2
          initialDelaySeconds: 5
          failureThreshold: 3
          tcpSocket:
            port: 4000
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: postgres
              topologyKey: failure-domain.beta.kubernetes.io/zone
        {{- if .Values.nodeSelector_api }}
      nodeSelector:
        cloud.google.com/gke-nodepool: {{ .Values.nodeSelector_api}}
        {{ end }}
